@page "/categories/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

&nbsp; <br />
<h3 class="card-title">Categories</h3>
@if (Categories==null)
{
    <div class="alert alert-info">Loading Categories</div>
}
else
{
    <div class="container-fluid px-4">
		<div class="row row-cols-1 row-cols-xl-5 row-cols-lg-4 row-cols-md-3 row-cols-sm-2 g-4">
            @foreach (var category in Categories)
            {
                <div class="col">
                    <div class="card text-center h-100">
                        <img src="@category.ImgUri" class="card-img-top p-2" alt="@category.Name Image">
                        <div class="card-body p-2 m-0">
                            <h5 class="card-title">@category.Name</h5>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private List<Category> Categories;
    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }

    async Task Delete(int categoryId)
    {
        if (Categories != null)
        {
            var category = Categories.First(q => q.Id == categoryId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {category.Name}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.CategoriesEndpoint}/{categoryId}");
                await OnInitializedAsync();
            }
        }
    }
}
