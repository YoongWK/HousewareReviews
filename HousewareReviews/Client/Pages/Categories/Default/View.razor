@page "/categories/{categoryId:int}/products/"
@inject IHttpClientFactory ClientFactory

<PageTitle>Houseware Reviews - @category?.Name</PageTitle>

    <div class="container-fluid p-4">
        <h4 class="card-title pb-3">Category: @category?.Name</h4>

    @if (Products == null)
    {
        <div class="alert alert-info">Loading @category?.Name Products</div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-xl-5 row-cols-lg-4 row-cols-md-3 row-cols-sm-2 g-4">
            @foreach (var product in Products)
            {
                <div class="col">
                    <ProductCard product="product"></ProductCard>
                </div>
            }
        </div>
    }
</div>

@code {
    private HttpClient _client;
    [Parameter] public int categoryId { get; set; }
    private Category? category;
    private List<Product>? Products;

    protected override void OnInitialized()
    {
        _client = ClientFactory.CreateClient("public");
    }

    protected async override Task OnInitializedAsync()
    {
        category = await _client.GetFromJsonAsync<Category>($"{Endpoints.CategoriesEndpoint}/{categoryId}");
        var allProducts = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
        Products = allProducts?.Where(p => p.CategoryId == categoryId).ToList();
    }
}
