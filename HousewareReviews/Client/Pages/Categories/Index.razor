@page "/categories/"
@inject IHttpClientFactory ClientFactory
@* @attribute [Authorize(Roles ="Staff")]
 *@
<h3 class="card-title p-4">Categories</h3>

@if (Categories==null)
{
    <div class="alert alert-info">Loading Categories</div>
}
else
{
    <div class="container-fluid px-4">
		<div class="row row-cols-1 row-cols-xl-5 row-cols-lg-4 row-cols-md-3 row-cols-sm-2 g-4">
            @foreach (var category in Categories)
            {
                <div class="col">
                    <a href="/products/categories/@category.Id">
                        <div class="card text-center h-100 rounded-5">
                            <img src="@category.ImgUri" class="card-img-top rounded-top-5" alt="@category.Name Image">
                            <div class="card-body p-2 m-0">
                                <h5 class="card-title">@category.Name</h5>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
}

@code {
    private HttpClient _client;

    private List<Category>? Categories;

    protected override void OnInitialized()
    {
        _client = ClientFactory.CreateClient("public");
    }

    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }
}
