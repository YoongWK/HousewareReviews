@page "/companies/view/{id:int}"
@inject IHttpClientFactory ClientFactory
@inject NavigationManager _navManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@* @attribute [Authorize(Roles = "Staff")] *@

<AuthorizeView Roles="Staff">
	<div class="container-fluid px-4">
		<h3 class="card-title mt-4 mb-3">View Company</h3>
		<FormComponent company="company" Disabled="true" />
	</div>
</AuthorizeView>

<AuthorizeView>
	<NotAuthorized>
		<div class="container-fluid px-2" style="background-color: var(--blue)">
			<div class="row">
				<div class="col-4 d-flex align-items-center">
					<img src="@company.LogoUri" class="p-3" alt="@company.Name Image">
				</div>
				<div class="col-8 p-3">
					<h3 style="color: var(--white)"><b>@company.Name</b></h3>
					<p class="m-0" style="color: var(--white)">@productCount Products</p>
					<p class="m-0" style="color: var(--white)">@companyreviewCount Reviews</p>
				</div>
				<div class="col-12 text-end">
					<a href="@company.WebsiteUrl" target="_blank" class="btn btn-light rounded-5 mb-2" style="color:var(--darkgray)">
						<span class="oi oi-globe"></span>
						<small><b>Visit Our Website</b></small>
					</a>
				</div>
			</div>
		</div>

		<div class="card p-3 rounded-5 m-3" style="background-color: var(--white)">
			<h3 class="card-title" style="color: var(--blue)"><b>About</b></h3>
			<p>@company.Description</p>
			<h3 class="card-title" style="color: var(--blue)"><b>Categories</b></h3>
			<ul>
				@if (distinctCategories != null)
				{
					@foreach (var category in distinctCategories)
					{
						<li>@category</li>
					}
					Console.WriteLine("Hello");
				}
				else
				{
					<li>No @company.Name products under any categories</li>
				}
			</ul>
			<h3 class="card-title" style="color: var(--blue)"><b>Contact</b></h3>
			<div>
				<span class="oi oi-phone" aria-hidden="true" style="width: 20px; height: 20px;"></span>
				<small>+65 @company.ContactNumber</small>
			</div>
			<div>
				<span class="oi oi-envelope-closed" aria-hidden="true" style="width: 20px; height: 20px;"></span>
				<small>@company.Email</small>
			</div>
			
		</div>

		<div class="card p-3 rounded-4 m-3" style="background-color: var(--lightblue)">
			<h2 class="card-title text-center m-2 pb-2" style="color: var(--black)"><b>Our Products</b></h2>
			<div class="row row-cols-1 row-cols-xl-5 row-cols-lg-4 row-cols-md-3 row-cols-sm-2 g-4">
				@* for each product in company products *@
				@if (products != null) {
					@foreach (var product in products)
					{
						<a href="/products/@product.Id" style="text-decoration: none;">
							<div class="card text-center h-100 rounded-3">
								<img src="@product.ImgUri" class="card-img-top rounded-top-3" alt="@product.Name Image">
								<div class="card-body m-0 py-0 px-2">
									<small class="card-title"><b>@product.Name</b></small>
								</div>
								<div class="card-body m-0 py-0 px-2">
									<small class="card-text">@product.Price</small>
								</div>
								<div class="card-body m-0 py-0 px-2">
									<small class="card-text">@product.Company?.Name</small>
								</div>
								<div class="card-body m-0 py-0 px-2">
									<small class="card-text">@product.Category.Name</small>
								</div>
							</div>
						</a>
					}
				}
			</div>
		</div>

	</NotAuthorized>
</AuthorizeView>

<AuthorizeView Roles="Consumer">
	<div class="container-fluid px-2" style="background-color: var(--blue)">
		<div class="row">
			<div class="col-4 d-flex align-items-center">
				<img src="@company.LogoUri" class="p-3" alt="@company.Name Image">
			</div>
			<div class="col-8 p-3">
				<h3 style="color: var(--white)"><b>@company.Name</b></h3>
				<p class="m-0" style="color: var(--white)">@productCount Products</p>
				<p class="m-0" style="color: var(--white)">@companyreviewCount Reviews</p>
			</div>
			<div class="col-12 text-end">
				<a href="@company.WebsiteUrl" target="_blank" class="btn btn-light rounded-5 mb-2" style="color:var(--darkgray)">
					<span class="oi oi-globe"></span>
					<small><b>Visit Our Website</b></small>
				</a>
			</div>
		</div>
	</div>

	<div class="card p-3 rounded-5 m-3" style="background-color: var(--white)">
		<h3 class="card-title" style="color: var(--blue)"><b>About</b></h3>
		<p>@company.Description</p>
		<h3 class="card-title" style="color: var(--blue)"><b>Categories</b></h3>
		<ul>
			@if (distinctCategories != null)
			{
				@foreach (var category in distinctCategories)
				{
					<li>@category</li>
				}
				Console.WriteLine("Hello");
			}
			else
			{
				<li>No @company.Name products under any categories</li>
			}
		</ul>
	</div>

	<div class="card p-3 rounded-4 m-3" style="background-color: var(--lightblue)">
		<h2 class="card-title text-center m-2 pb-2" style="color: var(--black)"><b>Our Products</b></h2>
		<div class="row row-cols-1 row-cols-xl-5 row-cols-lg-4 row-cols-md-3 row-cols-sm-2 g-4">
			@* for each product in company products *@
			@if (products != null)
			{
				@foreach (var product in products)
				{
					<a href="/products/@product.Id" style="text-decoration: none;">
						<div class="card text-center h-100 rounded-3">
							<img src="@product.ImgUri" class="card-img-top rounded-top-3" alt="@product.Name Image">
							<div class="card-body m-0 py-0 px-2">
								<small class="card-title"><b>@product.Name</b></small>
							</div>
							<div class="card-body m-0 py-0 px-2">
								<small class="card-text">@product.Price</small>
							</div>
							<div class="card-body m-0 py-0 px-2">
								<small class="card-text">@product.Company?.Name</small>
							</div>
							<div class="card-body m-0 py-0 px-2">
								<small class="card-text">@product.Category.Name</small>
							</div>
						</div>
					</a>
				}
			}
		</div>
	</div>
</AuthorizeView>

@code {
	[Parameter] public int id { get; set; }
	private HttpClient _client;
	Company? company = new Company();
	private IList<Product> Products;
	private List<Product>? products;
	private IList<Category> Categories;
	private IEnumerable<String?> distinctCategories;

	bool userIsStaff = false;
	int productCount = 0;
	int companyreviewCount = 0;

	protected override void OnInitialized()
	{
		_client = ClientFactory.CreateClient("public");
	}

	protected async override Task OnParametersSetAsync()
	{
		//distinctCategories = null;
		productCount = 0;
		companyreviewCount = 0;
		company = await _client.GetFromJsonAsync<Company>($"{Endpoints.CompaniesEndpoint}/{id}");
		Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
		Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
		var Reviews = await _client.GetFromJsonAsync<List<Review>>($"{Endpoints.ReviewsEndpoint}");

		var companyProducts = new List<Product>();
		// var companyReviews = new List<Review>();

		distinctCategories = Products
		.Where(p => p.CompanyId == id)
		.Select(p => p.CategoryId)
		.Distinct()
		.Select(categoryId =>
		{
			var category = Categories.FirstOrDefault(c => c.Id == categoryId);
			return category.Name;
		});
		if (Products != null)
		{
			foreach (var product in Products)
			{
				if (product.CompanyId == company.Id)
				{
					companyProducts.Add(product);
					productCount++;
				}
			}
		}
		products = companyProducts;

		if (Reviews != null)
		{
			foreach (var review in Reviews)
			{
				if (review.Product.CompanyId == company.Id)
				{
					companyreviewCount++;
				}
			}
		}

		var authstate = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		userIsStaff = authstate.User.IsInRole("Staff");
	}
}