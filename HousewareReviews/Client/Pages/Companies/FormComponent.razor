@attribute [Authorize(Roles = "Staff")]

<EditForm Model="@company" OnValidSubmit="@(() => OnValidSubmitCallback(company))">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="modal-body text-start">
		<fieldset disabled="@Disabled">
			<div class="form-group pb-3">
				<label>Name:</label>
				<div>
					<InputText @bind-Value="@company.Name" class="form-control shadow-none" />
					<ValidationMessage For="@(() => company.Name)" />
				</div>
			</div>

			<div class="form-group pb-3">
				<label>UEN:</label>
				<div>
					<InputText @bind-Value="@company.UEN" class="form-control shadow-none" />
					<ValidationMessage For="@(() => company.UEN)" />
				</div>
			</div>

			<div class="form-group pb-3">
				<label>Email:</label>
				<div>
					<InputText @bind-Value="@company.Email" class="form-control shadow-none" />
					<ValidationMessage For="@(() => company.Email)" />
				</div>
			</div>

			<div class="form-group pb-3">
				<label>Contact Number:</label>
				<div>
					<InputText @bind-Value="@company.ContactNumber" class="form-control shadow-none" />
					<ValidationMessage For="@(() => company.ContactNumber)" />
				</div>
			</div>

			<div class="form-group pb-3">
				<label>Description:</label>
				<div>
					<InputTextArea @bind-Value="@company.Description" class="form-control shadow-none" style="resize:none;" rows="4" maxlength="301" />
					<ValidationMessage For="@(() => company.Description)" />
				</div>
			</div>

			<div class="form-group pb-3">
				<label>Website URL:</label>
				<div>
					<InputText @bind-Value="@company.WebsiteUrl" class="form-control shadow-none" />
					<ValidationMessage For="@(() => company.WebsiteUrl)" />
				</div>
			</div>

			<div class="form-group">
				<label>Logo:</label>
				@if (!Disabled)
				{
					<div class="d-flex flex-column pb-1">
						<InputFile OnChange="OnFileSelection" class="file-upload" accept="image/png, image/jpeg" />
						<ValidationMessage For="@(() => company.LogoUri)" />
					</div>
				}
				<img class="w-100" src="@company.LogoUri" onerror="this.style.display='none'" />
			</div>
		</fieldset>
    </div>

	<div class="modal-footer">
		<button type="button" class="btn btn-secondary shadow-none" data-bs-dismiss="modal" @onclick="OnInitAsync">Close</button>
		@if (!Disabled)
		{
			<button type="submit" class="btn btn-success shadow-none">
				@ButtonText
			</button>
		}
	</div>
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Company? company { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback<Company> OnValidSubmit { get; set; }
	[Parameter] public Func<Task> OnInitAsync { get; set; }

	private async Task OnValidSubmitCallback(Company comp)
	{
		if (OnValidSubmit.HasDelegate)
		{
			await OnValidSubmit.InvokeAsync(comp);
		}
	}

    private async Task OnFileSelection(InputFileChangeEventArgs e)
    {
        var imgFile = e.File;
        var buffers = new byte[imgFile.Size];
        await imgFile.OpenReadStream().ReadAsync(buffers);
        company.LogoUri = $"data:image/png;base64,{Convert.ToBase64String(buffers)}";
    }
}